[
  
  {
    "title": "Tennis Analysis",
    "imageSrc": "projects/Tennis_Analysis.png",
    "description": "- Developed an advanced Tennis Analysis System leveraging Ultralytics YOLOv8 for real-time detection of players and tennis balls.\n- Implemented object tracking algorithms to follow detected objects across frames, enhancing continuous analysis.\n- Trained a custom Convolutional Neural Network (CNN) using PyTorch to detect key points on the tennis court.\n- Utilized OpenCV for video processing tasks, including reading, manipulating, and saving video files, to support the overall analysis pipeline.",
    "skills": ["Ultralytics YOLOv8", "PyTorch", "OpenCV"],
   
    "source": "https://github.com/SriramSohanBasa/Tennis_analysis"
  },
  {
    "title": "Finance Analyst RAG",
    "imageSrc": "projects/FinanceRAG.png",
    "description": "- Built a Retrieval-Augmented Generation (RAG) system utilizing agents powered by the Groq model.\n- Integrated tools like YFinance for stock analysis, analyst recommendations, and financial data retrieval.\n- Enabled dynamic responses combining web search and financial insights with real-time data aggregation.",
  "skills": ["Groq API", "PyTorch", "OpenCV"],
   
    "source": "https://github.com/SriramSohanBasa/Agentic_AI/tree/main/Financial%20AI%20analyst"
  },
  {
    "title": "Medical RAG",
    "imageSrc": "projects/Medical_RAG.png",
    "description": "- Developed an end-to-end medical chatbot leveraging Retrieval-Augmented Generation (RAG) for accurate and context-aware responses.\n- Integrated OpenAI GPT and Pinecone to retrieve and generate medical information.\n- Designed using LangChain for modular and flexible chatbot workflows.\n- Implemented Flask as a lightweight backend for seamless deployment.\n- Enabled secure, real-time interactions with sensitive medical data while maintaining compliance.",
    "skills": [ "LangChain", "Flask", "Pinecone", "LLM"],
    "source": "https://github.com/SriramSohanBasa/FullStack_Medical_RAG"
  },
  {
    "title": "DCGAN Image Generation",
    "imageSrc": "projects/DCGAN.png",
    "description": "- Implemented a Deep Convolutional GAN (DCGAN) to generate realistic images from the CIFAR-10 dataset.\n- Designed the generator and discriminator networks with PyTorch for efficient image synthesis.\n- Utilized WandB for logging training metrics, including generator and discriminator loss.\n- Saved generated images every 2 epochs and visualized quality improvements during training.\n- Explored future enhancements, including conditional GANs (cGAN) and Wasserstein Loss for improved stability.",
    "skills": ["Python", "PyTorch", "GAN", "WandB"],
    "source": "https://github.com/SriramSohanBasa/GAN_implementation"
  },
  {
    "title": "Medicine-Delivery-System",
    "imageSrc": "projects/Med_delivery.png",
    "description": "Developed a secure and efficient database system for managing real-time prescription orders, patient information, and data visualization.",
    "skills": ["Python", "SQL", "Flask"],
    
    "source": "https://github.com/SriramSohanBasa/Medicine-Delivery-System"
  },
  {
    "title": "LifeCord:Stem Cell Donation",
    "imageSrc": "projects/project.png",
    "description": "Developed LifeCord, a Java Swing application connecting blood cancer patients with stem cell donors. The app manages registration, network administration, and treatment coordination across multiple enterprises and organizations.",
    "skills": ["Java Swing", " SQL"],
    
    "source": "https://github.com/SriramSohanBasa/StemCell-Bank"
  },
  {
    "title": "Portfolio",
    "imageSrc": "projects/Portfolio.png",
    "description": "My Portfolio",
    "skills": [ "MongoDB","Express", "React", "Node"],
    
    "source": "https://sriramsohan-basa.netlify.app/"
  },
  {
    "title": "Trouvaille- Travel Website",
    "imageSrc": "projects/Trouvaille.png",
    "description": "Created a comprehensive travel website with features for review management, accommodation booking, and user-friendly interfaces.",
    "skills": ["MongoDB", "Express", "Node", "React"],
    "demo": "",
    "source": "https://trouvaille-beige.vercel.app/home"
  }

]
